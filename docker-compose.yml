version: "3.8"

services:
  # Main Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: main_nginx_proxy
    ports:
      - "${NGINX_EXTERNAL_PORT:-80}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - client
      - server
      - data_server
    networks:
      - app-network
    environment:
      # Pass domain name to nginx config if needed (e.g., for server_name directive via envsubst)
      - DOMAIN_NAME=${DOMAIN_NAME:-http://localhost}

  # Client Application (React served by Nginx)
  client:
    build:
      context: ./client_v3
      dockerfile: Dockerfile
      args:
        # Derive VITE variables from DOMAIN_NAME at build time
        - VITE_SERVER_URL=${DOMAIN_NAME:-http://localhost}
        - VITE_DB_SERVER_URL=${DOMAIN_NAME:-http://localhost}/api/data
        - VITE_AES_SECRET=${AES_SECRET}
    container_name: client_app
    expose:
      - "80"
    # Runtime environment variables for client are less common with static builds,
    # but kept here for consistency if needed by some entrypoint script.
    # Build args are generally sufficient for VITE vars.
    environment:
      - VITE_SERVER_URL=${DOMAIN_NAME:-http://localhost}
      - VITE_DB_SERVER_URL=${DOMAIN_NAME:-http://localhost}/api/data
      - VITE_AES_SECRET=${AES_SECRET}
    networks:
      - app-network
    restart: unless-stopped

  # Game Server (Node.js + Socket.IO)
  server:
    build:
      context: ./server_v3
      dockerfile: Dockerfile
    container_name: game_server
    expose:
      - "${SERVER_INTERNAL_PORT:-3000}"
    environment:
      - PORT=${SERVER_INTERNAL_PORT:-3000}
      # Derive CORS origin from DOMAIN_NAME
      - CLIENT_URL=${DOMAIN_NAME:-http://localhost}
      - SERVER_URL=${SERVER_URL:-http://server:3000}
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped

  # Data Server (Node.js API)
  data_server:
    build:
      context: ./data_server
      dockerfile: Dockerfile
    container_name: data_server_api
    expose:
      - "${DATA_SERVER_INTERNAL_PORT:-3001}"
    environment:
      - PORT=${DATA_SERVER_INTERNAL_PORT:-3001}
      - MONGODB_URI=${MONGODB_URI}
      - DATA_SERVER_CORS_ORIGIN=${DOMAIN_NAME:-http://localhost}
      - NODE_ENV=production
    depends_on:
      - mongo
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB Database
  mongo:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongo_data:/data/db
    expose:
      - "27017"
    networks:
      - app-network
    restart: unless-stopped

# Define the network
networks:
  app-network:
    driver: bridge

# Define persistent volume for MongoDB data
volumes:
  mongo_data:
    driver: local
